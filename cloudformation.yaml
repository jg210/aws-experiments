---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Free-tier web hosting."
Parameters:
  SshKeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "aws-experiments"
# DnsApiKey:
#   Description: "DNS-update API key."
#   Type: "AWS::SecretsManager::Secret"
#   NoEcho: true
#   Properties:
Mappings:
  RegionMap:
    # Ubuntu Server 18.04 LTS (HVM), SSD Volume Type
    "eu-west-1":
      AMI: "ami-08d658f84a6d84a80"
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: "default"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet
  Server:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceType: "t2.micro"
      KeyName:
        Ref: "SshKeyName"
      SubnetId:
        Ref: "Subnet"
      SecurityGroupIds:
      - !Ref SecurityGroup
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash
          set -o nounset
          set -o errexit
          set -o pipefail
          publicIpAddress=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
          printf "public IP address: %s\n" "${publicIpAddress}"
          sudo apt-get install nginx
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group."
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: "0.0.0.0/0"
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
      - IpProtocol: "tcp"
        FromPort: 1
        ToPort: 65535
        CidrIp: "0.0.0.0/0"
Outputs:
  PublicIp:
    Value: !GetAtt 'Server.PublicIp'