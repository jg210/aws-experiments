* Use terraform.
  X installation.
  - rewrite cloudformation template.
  - remove cloudformation template and steps from README.
  - configure EIP
  - fix provider versions.
  - fix terraform version?
  - set up state storage.

* Update DNS record with elastic IP address of server.

* user-data script is not viable way to provision instance
  - not run on stack update.

* Publish Spring app to S3.

* Deploy and start Spring app.

* Configure https cert.

* Automate package updates.

* Don't allow connections until first set of updates applied.

* Wait for server to start up before declaring EC2/stack deployment complete.

* Redirect http to https.

* Automatic restarts on EC2 failure
  - configure autoscaling group?
    - one subnet per AZ
    - one instance max to stay within free tier
    - have to use a hack to keep same Elastic IP address when restart.
  - configure cloudwatch?
    - would lose service if AZ fails
    - IP address retained.

* NTP
  - ntp.ubuntu.com inaccessible from the EC2 instance.
    - errors in syslog
  - amazon provide 169.254.169.123
    - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html

* EC2 cloudformation config only allows one ssh public key per instance...
  - https://stackoverflow.com/questions/24409095/create-an-ec2-instance-with-multiple-key-pairs
  - so how are you supposed to log in from multiple home directories?
    - sharing a private key is not acceptable, especially not between users.
    - using parameter means could have one instance per ssh key, but that's not useful.
    - reupload key each time change home directories?
    - generate new key each time deploy instance, throwing away as soon as have provisioned instance properly.
    - build and deploy AMI containing public keys

* Staging and production environments?

* Automated deployments.
  - would need to do things like this to have python and ruby in travis.
    - https://github.com/travis-ci/travis-ci/issues/4090
  - a docker-based testing platform would be more convenient.
  - generate change set on branches don't deploy from.

* Wrap environment setup in scripts.

* Tighten up egress permissions.

* Static analysis.
  X cfn_nag.
  - run aws cloudformation validate-template from travis.
  - https://github.com/Skyscanner/cfripper too?

* "terraform plan" still outputs terminal control sequences if pipe stdout to less.