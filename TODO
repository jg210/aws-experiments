* checkov terraform static analysis?
  - finds lots of issues
  - conflicts with awscli via botocore depencencies
    - https://github.com/jg210/aws-experiments/pull/22#issuecomment-3426102790
    - get them to fix this?
    - separate venvs for the two tools?

* Alternatives to requirements.txt and constraints.txt
  - they don't remove packages that aren't listed
  - alternatives?
    - pip lock?
    - pipenv?
    - poetry?
    - ???

* The spring-experiments jar could be made more streamlined.
  - doesn't need to support HTTP server since only deploy with lambda
  - faster startup by e.g. removing bean discovery.

* Move commands from README.md to ~/bin/setup

* EBS snapshots were building up.
  - what was creating them?
  - create snapshot lifecycle policy?

* Try out terraform registry modules for lambda functions etc.
  - https://registry.terraform.io/modules/howdio/lambda/aws/0.2.1
  - https://registry.terraform.io/modules/techjacker/lambda-api-gateway/aws/1.0.2

* http to https redirection for API gateway.
  - would need cloudfront?
    - https://stackoverflow.com/a/47373353

* Automated staged deployment.

* aws CLI 2.x.
  - isn't available via pypi/pip
    - https://github.com/aws/aws-cli/issues/4947

* Automated tests.
  - https://www.terraform.io/docs/github-actions/getting-started/index.html?
  - terraform graph step commented out since terraform S3 backend needs AWS credentials
    - this might allow multiple backends?
      - https://www.monterail.com/blog/chicken-or-egg-terraforms-remote-backend
  - store terraform dependency-graph svg and link to it from README.md.

* Move ruby config to separate repo since not used any more.

* "terraform plan" still outputs terminal control sequences if pipe stdout to less.
